<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>首页 on 锦瑟无端</title><link>https://ivylet.github.io/</link><description>Recent content in 首页 on 锦瑟无端</description><generator>Hugo -- gohugo.io</generator><language>cn</language><managingEditor>1209073747@qq.com (Yike)</managingEditor><webMaster>1209073747@qq.com (Yike)</webMaster><copyright>Copy, _right?_ :thinking_face:</copyright><lastBuildDate>Thu, 10 Nov 2022 11:18:29 +0800</lastBuildDate><atom:link href="https://ivylet.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>STL中常用算法</title><link>https://ivylet.github.io/posts/chapter01/cpp-stl-argo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/posts/chapter01/cpp-stl-argo/</guid><description>STL中常用算法 # STL中定义了常用的一些算法，比如遍历，查找，排序等一些算法。</description></item><item><title>STL中常用算法1</title><link>https://ivylet.github.io/posts/chapter01/cpp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/posts/chapter01/cpp/</guid><description>STL 中常用算法 # STL 中定义了常用的一些算法，比如遍历，查找，排序等一些算法。</description></item><item><title>常用算法储备知识</title><link>https://ivylet.github.io/posts/chapter01/datastru/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/posts/chapter01/datastru/</guid><description>时间复杂度 # 对数 ： 每轮排除一半情况 常用于二分法 指数：每轮分别出两倍情况 线性对数：一般为两层循环相互独立，一层为n一层为对数 常常出现在快速排序 空间复杂度 # 位运算 # 位运算有（&amp;amp;、|、^、~、&amp;raquo;、&amp;laquo;）这几种方法，以下为正且位数相同的二进制数进行的位运算，但是还会有其他特殊情况，比如二进制数非正，位数不同的情况。</description></item><item><title>无意识？！</title><link>https://ivylet.github.io/posts/notes/other/00001/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/posts/notes/other/00001/</guid><description>无意识是什么？ 自动机 循环运动</description></item><item><title>暂且第一记</title><link>https://ivylet.github.io/posts/notes/thinknote/00001/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/posts/notes/thinknote/00001/</guid><description>不是为了个文凭吧，还是要自己想要去做什么东西？</description></item><item><title>C++ STL</title><link>https://ivylet.github.io/posts/chapter01/cpp-stl-intro/</link><pubDate>Thu, 10 Nov 2022 11:18:29 +0800</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/posts/chapter01/cpp-stl-intro/</guid><description>什么是C++标准模板库（STL）？ # 标准模板库 STL（Standard Template Library），是 C++ 标准库的一部分，不需要单独安装，只需要#include 头文件。</description></item><item><title>一些话</title><link>https://ivylet.github.io/posts/notes/thinknote/00002/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/posts/notes/thinknote/00002/</guid><description>2023-07-03 01:02:34+08:00 感觉自己还是没有十分投入吧，有点自己骗自己的感觉。学习考研没那么容易，明天再接再厉，找回状态。</description></item><item><title/><link>https://ivylet.github.io/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/about/</guid><description>这是关于页面</description></item><item><title>《大问题》阅读随笔</title><link>https://ivylet.github.io/posts/notes/readingnotes/0001/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/posts/notes/readingnotes/0001/</guid><description>The Big Questions</description></item><item><title>DP</title><link>https://ivylet.github.io/posts/chapter02/acwing/dp/dp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/posts/chapter02/acwing/dp/dp/</guid><description>背包DP # 01背包 # 每件物品最多只用一次。</description></item><item><title>全部文章</title><link>https://ivylet.github.io/all/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/all/</guid><description/></item><item><title>其他</title><link>https://ivylet.github.io/posts/chapter02/acwing/math/others/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/posts/chapter02/acwing/math/others/</guid><description>秦九韶算法 # 使用秦九韶算法可以计算多项式的值，或进制转换。 例子：计算多项式的值。a[i]表示多项式中的x的i次幂的系数。</description></item><item><title>原初号</title><link>https://ivylet.github.io/posts/notes/thinknote/00000/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/posts/notes/thinknote/00000/</guid><description>为什么要记录？</description></item><item><title>基础算法一</title><link>https://ivylet.github.io/posts/chapter02/acwing/base/base-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/posts/chapter02/acwing/base/base-1/</guid><description>快速排序 # 主要思想: # 在数组中选择一个值，然后遍历数组，比这个值大的放到这个值后边，比这个值小的放到这个值的前边。</description></item><item><title>常用思想方法</title><link>https://ivylet.github.io/posts/chapter02/commonsolution/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/posts/chapter02/commonsolution/</guid><description/></item><item><title>拉康</title><link>https://ivylet.github.io/posts/notes/readingnotes/0002/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/posts/notes/readingnotes/0002/</guid><description>人们可以因为完全不同的原因对同一个人产生兴趣，并把他安插到各自生命的故事中的不同位置上。</description></item><item><title>搜索与图论</title><link>https://ivylet.github.io/posts/chapter02/acwing/base/search_and_graph/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/posts/chapter02/acwing/base/search_and_graph/</guid><description>图论 # Floyd算法 # 主要思想是: 循环邻接矩阵中查找每个点到另外一个点的最短距离，不仅是看直接距离，也还要通过计算中转点。比如计算A到B的距离，要比较A到C的距离与C到B的距离的和、A到B的直接距离的最小值来判断，中转点可以是其他节点，所以代码实现中出现了三重循环。</description></item><item><title>数据结构</title><link>https://ivylet.github.io/posts/chapter02/acwing/base/datestruct/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/posts/chapter02/acwing/base/datestruct/</guid><description>链表 # 拿数组模拟链表,其实也就是静态链表.</description></item><item><title>数论</title><link>https://ivylet.github.io/posts/chapter02/acwing/math/shulun/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/posts/chapter02/acwing/math/shulun/</guid><description>质数 # 针对所有大于1的自然数定义的，只包含1和本身两个约数的自然数叫做质数（素数）。</description></item><item><title>生活</title><link>https://ivylet.github.io/posts/notes/thinknote/00003/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/posts/notes/thinknote/00003/</guid><description>记得东西有些杂乱，可以细分一下内容，归类，然后有空的时候整理一下，maybe换个主题？</description></item><item><title>算法竞赛常用STL</title><link>https://ivylet.github.io/posts/chapter01/argo-datastru/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/posts/chapter01/argo-datastru/</guid><description>数据结构 # vector[可变数组] # vector是一种变长数组，即可以自动改变长度的数组。 头文件</description></item><item><title>背包问题</title><link>https://ivylet.github.io/posts/chapter02/acwing/dp/package/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/posts/chapter02/acwing/dp/package/</guid><description>01 背包问题 # 每件物品最多只用一次。</description></item><item><title>贪心</title><link>https://ivylet.github.io/posts/chapter02/acwing/base/greedy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/posts/chapter02/acwing/base/greedy/</guid><description> 与区间有关的问题 #</description></item></channel></rss>