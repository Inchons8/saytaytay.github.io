<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>全栈 on 锦瑟无端</title><link>https://ivylet.github.io/engineering/full-stack/</link><description>Recent content in 全栈 on 锦瑟无端</description><generator>Hugo -- gohugo.io</generator><language>cn</language><managingEditor>1209073747@qq.com (Yike)</managingEditor><webMaster>1209073747@qq.com (Yike)</webMaster><copyright>Copy, _right?_ :thinking_face:</copyright><atom:link href="https://ivylet.github.io/engineering/full-stack/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://ivylet.github.io/engineering/full-stack/database/indexdb/indexdb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/engineering/full-stack/database/indexdb/indexdb/</guid><description>简介以及特点 # IndexedDB、Cookie、localStorage和sessionStorage是客户端存储解决方案，它们各自具有不同的特点和适用场景：</description></item><item><title/><link>https://ivylet.github.io/engineering/full-stack/database/postgres/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/engineering/full-stack/database/postgres/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid><description/></item><item><title/><link>https://ivylet.github.io/engineering/full-stack/javascript/howfrontgetdata/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/engineering/full-stack/javascript/howfrontgetdata/</guid><description>前端如何获取数据?</description></item><item><title/><link>https://ivylet.github.io/engineering/full-stack/nextjs/0001/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/engineering/full-stack/nextjs/0001/</guid><description>nextjs分为app router和文件系统路由</description></item><item><title/><link>https://ivylet.github.io/engineering/full-stack/nextjs/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/engineering/full-stack/nextjs/readme/</guid><description>关于React的框架 NextJS</description></item><item><title/><link>https://ivylet.github.io/engineering/full-stack/react/0001/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/engineering/full-stack/react/0001/</guid><description>为什么React? 原生JavaScript操作DOM繁琐 操作实DOM 浏览器会经常重排 不够模块化 组件化 代码复用率低 虚拟DOM 虚拟DOM属性少 更轻、最终会被React转换为真实DOM</description></item><item><title/><link>https://ivylet.github.io/engineering/full-stack/react/0002/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/engineering/full-stack/react/0002/</guid><description>Prisma ORM对象关系映射 NextAuth</description></item><item><title/><link>https://ivylet.github.io/engineering/full-stack/supabase/intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/engineering/full-stack/supabase/intro/</guid><description>install # npm install @supabase/supabase-js 初始化</description></item></channel></rss>