<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Engineerings on 锦瑟无端</title><link>https://ivylet.github.io/engineering/</link><description>Recent content in Engineerings on 锦瑟无端</description><generator>Hugo -- gohugo.io</generator><language>cn</language><managingEditor>1209073747@qq.com (Yike)</managingEditor><webMaster>1209073747@qq.com (Yike)</webMaster><copyright>Copy, _right?_ :thinking_face:</copyright><lastBuildDate>Tue, 11 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://ivylet.github.io/engineering/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://ivylet.github.io/engineering/issues/documentautosave/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/engineering/issues/documentautosave/</guid><description>文件实时保存 打开文档就获取信息 使用二进制传输，如果我修改了</description></item><item><title/><link>https://ivylet.github.io/engineering/linux/linux%E5%A4%9A%E7%BA%BF%E7%A8%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/engineering/linux/linux%E5%A4%9A%E7%BA%BF%E7%A8%8B/</guid><description>两个进程函数 # fork() 函数 在 LINUX 系统创建一个新进程的唯一方法是使用fork()函数.</description></item><item><title/><link>https://ivylet.github.io/engineering/linux/linxu%E5%A4%9A%E8%BF%9B%E7%A8%8B%E7%BC%96%E7%A8%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/engineering/linux/linxu%E5%A4%9A%E8%BF%9B%E7%A8%8B%E7%BC%96%E7%A8%8B/</guid><description>逻辑流与并发流 # 并发 # 逻辑控制流 # 并发流及相关概念 # 并发与并行 # 进程基本概念 # 进程概念、结构与描述 # 什么是进程 # 进程结构 # 进程属性(保存在PCB中) # 进程描述信息 进程控制信息 进程资源信息</description></item><item><title/><link>https://ivylet.github.io/engineering/linux/%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/engineering/linux/%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</guid><description>常用指令 # vi编辑器 # 命令行指令 vi filename 编辑器内部命令行指令 :set nu 显示行号 :w 保存 :w newfilename 另存为 :/word 查询单词word :/word n N (n 向下寻找,N 向上寻找) i 插入 y 复制 p 粘贴 d 删除 w 切换到下一个单词 :wq 保存并退出 文件管理指令 # 删除操作 # 删除文件</description></item><item><title/><link>https://ivylet.github.io/engineering/linux/%E8%99%9A%E6%8B%9F%E6%9C%BA/docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/engineering/linux/%E8%99%9A%E6%8B%9F%E6%9C%BA/docker/</guid><description>docker-compose: command not found问题的两种常用方法_zhiweicoding的博客-CSDN博客</description></item><item><title/><link>https://ivylet.github.io/engineering/linux/%E8%99%9A%E6%8B%9F%E6%9C%BA/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/engineering/linux/%E8%99%9A%E6%8B%9F%E6%9C%BA/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</guid><description>无法找到软件包 # 更换软件源</description></item><item><title/><link>https://ivylet.github.io/engineering/productiondesign/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/engineering/productiondesign/readme/</guid><description>产品经理</description></item><item><title>后端技术</title><link>https://ivylet.github.io/engineering/backend/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/engineering/backend/</guid><description/></item><item><title>数据科学</title><link>https://ivylet.github.io/engineering/datascience/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>1209073747@qq.com (Yike)</author><guid>https://ivylet.github.io/engineering/datascience/</guid><description/></item></channel></rss>